#@HEADER
# ----------------------------------------------------------------------
# - shell --------------------------------------------------------------
# ----------------------------------------------------------------------
#
SHELL        = /bin/sh
#
CD           = cd
CP           = cp
LN_S         = ln -s -f
MKDIR        = mkdir -p
RM           = /bin/rm -f
TOUCH        = touch
#
# ----------------------------------------------------------------------
# - HPCG Directory Structure / HPCG library ------------------------------
# ----------------------------------------------------------------------
#
TOPdir       = .
SRCdir       = $(TOPdir)/src
INCdir       = $(TOPdir)/src -I$(TOPdir)/cuda-src
BINdir       = $(TOPdir)/bin
#
# ----------------------------------------------------------------------
# - Message Passing library (MPI) --------------------------------------
# ----------------------------------------------------------------------
# MPinc tells the  C  compiler where to find the Message Passing library
# header files,  MPlib  is defined  to be the name of  the library to be
# used. The variable MPdir is only used for defining MPinc and MPlib.
#
MPdir        =
MPinc        = 
MPlib        =
#
#
# ----------------------------------------------------------------------
# - HPCG includes / libraries / specifics -------------------------------
# ----------------------------------------------------------------------
#
HPCG_INCLUDES = -I$(INCdir) $(MPinc)
HPCG_LIBS     =
#
# - Compile time options -----------------------------------------------
#
# -DHPCG_NO_MPI	        Define to disable MPI
# -DHPCG_NO_OPENMP	Define to disable OPENMP
# -DHPCG_CONTIGUOUS_ARRAYS Define to have sparse matrix arrays long and contiguous
# -DHPCG_DEBUG       	Define to enable debugging output
# -DHPCG_DETAILED_DEBUG Define to enable very detailed debugging output
#
# By default HPCG will:
#    *) Build with MPI enabled.
#    *) Build with OpenMP enabled.
#    *) Not generate debugging output.
#
HPCG_OPTS     =
#
# ----------------------------------------------------------------------
#
HPCG_DEFS     = $(HPCG_OPTS) $(HPCG_INCLUDES)
#
# ----------------------------------------------------------------------
# - Compilers / linkers - Optimization flags ---------------------------
# ----------------------------------------------------------------------
#
NVCC_LIBS    = -lcuda -lcudart -lmpi -lnuma
NVCC_INC = -I/usr/local/cuda/include

MPIC = mpic++

# CXX          = mpic++
COMPILER_OPTS = -fomit-frame-pointer -O3 -funroll-loops -W -Wall -fopenmp
# CXXFLAGS = $(COMPILER_OPTS) $(HPCG_DEFS) $(MPinc) $(NVCC_LIBS) $(NVCC_INC)

NVCC = nvcc
NVCCFLAGS     = -arch=sm_60  -Xcompiler "$(COMPILER_OPTS)"  $(HPCG_DEFS) $(MPinc) $(NVCC_INC) $(CUB-INCLUDE)

CXX = $(NVCC)
CXXFLAGS = $(NVCCFLAGS)

#
LINKER       = mpic++
LINKFLAGS    = $(COMPILER_OPTS) $(HPCG_DEFS) $(MPinc) $(NVCC_INC) $(NVCC_LIBS) $(CUB-INCLUDE)

#LINKER       = $(NVCC)
#LINKFLAGS    = $(NVCCFLAGS)

#
ARCHIVER     = ar
ARFLAGS      = r
RANLIB       = echo
#
# ----------------------------------------------------------------------

CUDA-COMPILER = nvcc
CUDA-INNER-OPTS = -fomit-frame-pointer -O3 -funroll-loops -W -Wall -fopenmp
CUDA-COMPILER-OPTS = -ccbin g++ -m64 -gencode -arch=sm_70 -Xcompiler "$(CUDA-INNER-OPTS)"

CUB-INCLUDE = -I/home/minhee/cub-1.8.0/
CUDA-INCLUDE = -/usr/local/cuda/include

CUDA-LIBRARY-DIR = /usr/local/cuda/lib64
CUDA-LIBRARY = -L$(CUDA-LIBRARY-DIR)

MPI-LIBRARY = -lmpi -lnuma

MPI-COMPIlER = /usr/local/bin/mpiCC
MPI-COMPILER-OPTS = 

MPI-LINKER = /usr/local/bin/mpiCC
MPI-LINKER-OPS = $(CUDA-LIBRARY)